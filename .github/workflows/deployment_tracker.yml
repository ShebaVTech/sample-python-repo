name: Notify QAs of Merged PRs to Beta

on:
  pull_request:
    types: [closed]
    branches:
      - beta

permissions:
  issues: write
  pull-requests: read

jobs:
  notify_qas:
    # Only if the PR is merged, and base is beta, head is main
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'beta' &&
      github.event.pull_request.head.ref == 'main'
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set current date
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Load QA members from file
        run: |
          FILE=".github/workflows/qa_members.txt"
          if [ ! -f "$FILE" ]; then
            echo "QA members file not found: $FILE"
            exit 1
          fi
          QAS=$(grep -v '^#' "$FILE" | tr '\n' ' ')
          echo "MENTIONS=${QAS}" >> $GITHUB_ENV

      - name: Get PRs merged today into beta
        run: |
          TODAY=$(date +%Y-%m-%d)
          RAW_PRS=$(gh pr list --base beta --state merged --json number,title,mergedAt -L 100 -R "${{ github.repository }}")

          PRS=$(echo "$RAW_PRS" | jq -r --arg TODAY "$TODAY" '
            map(select(.mergedAt | startswith($TODAY))) |
            .[] | "- PR-\(.number) \(.title)"
          ')

          if [ -z "$PRS" ]; then
            echo "No PRs merged into beta today."
            echo "PRS=" >> $GITHUB_ENV
          else
            echo "PRS<<EOF" >> $GITHUB_ENV
            echo "$PRS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create QA Issue
        if: env.PRS != ''
        run: |
          TITLE="PRs Merged into Beta - ${today}"

          cat <<EOF > issue_body.md
${MENTIONS} Please begin QA testing on the listed PRs.

The following PRs have been merged into beta:

${PRS}
EOF

          gh issue create --title "$TITLE" --body-file issue_body.md -R "${{ github.repository }}"
