name: Track Merges into Beta (Linked PR Titles)

on:
  pull_request:
    types:
      - closed
    branches:
      - beta
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: read

jobs:
  track_prs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load current date
        id: date
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Get merged PRs into beta
        id: get_prs
        run: |
          RAW_PRS=$(gh pr list --base beta --state merged --json title -L 100 -R ${{ github.repository }})
          FORMATTED_PRS=$(echo "$RAW_PRS" | jq -r '.[] | "  - \(.title)"')

          if [ -z "$FORMATTED_PRS" ]; then
            echo "PRS=" >> $GITHUB_ENV
          else
            echo "PRS<<EOF" >> $GITHUB_ENV
            echo "$FORMATTED_PRS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Load QA member usernames
        id: load_qa
        run: |
          FILE=".github/workflows/qa_members.txt"
          if [ ! -f "$FILE" ]; then
            echo "QA member list not found: $FILE"
            echo "MENTIONS=" >> $GITHUB_ENV
          else
            MENTIONS=$(grep -v '^#' "$FILE" | sed '/^$/d' | sed 's/^/@/' | paste -sd ' ' -)
            echo "MENTIONS=$MENTIONS" >> $GITHUB_ENV
          fi

      - name: Create GitHub Issue for QA
        if: env.PRS != ''
        run: |
          TITLE="PRs Merged into Beta - ${today}"
          BODY=$(printf "Please begin QA testing on the listed PRs.\n\nThe following PRs have been merged into **beta**:\n\n%s\n\n" "${MENTIONS}\n\n${PRS}")

          printf "%s" "$BODY" | gh issue create --title "$TITLE" --body-file - -R ${{ github.repository }}
