name: Track Merges into beta (Linked PR Titles)

on:
  pull_request:
    types:
      - closed
    branches:
      - beta
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: read

jobs:
  track_prs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Workspace and Git Directory
        run: |
          echo "--- Verifying Checkout ---"
          echo "Current directory: $(pwd)"
          ls -la ${{ github.workspace }}
          if [ -d "${{ github.workspace }}/.git" ]; then echo ".git directory FOUND."; else echo ".git directory NOT FOUND."; fi
          echo "--- End Verification ---"

      - name: Get merged PRs into beta and format as Markdown links
        id: get_prs
        run: |
          echo "Attempting gh pr list command..."
          RAW_PRS=$(gh pr list --base beta --state merged --json title,url -L 100 -R ${{ github.repository }})
          FORMATTED_PRS=$(echo "$RAW_PRS" | jq -r '.[] | "[\(.title)](\(.url))"')

          if [ -z "$FORMATTED_PRS" ]; then
            echo "No merged PRs found to report."
            FORMATTED_PRS=""
          else
            echo "Formatted PR Links:"
            echo "$FORMATTED_PRS"
          fi

          echo "PRS<<EOF" >> $GITHUB_ENV
          echo "$FORMATTED_PRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create an Issue with the list of PR Links
        if: env.PRS != ''
        id: create_issue
        run: |
          ISSUE_TITLE="PRs Merged into beta"
          ISSUE_BODY=$(printf "Merged PRs:\n\n%s" "${PRS}")
          echo "--- Issue Body Start ---"
          echo "${ISSUE_BODY}"
          echo "--- Issue Body End ---"

          ISSUE_URL=$(printf "%s" "${ISSUE_BODY}" | gh issue create --title "$ISSUE_TITLE" --body-file - -R ${{ github.repository }} --json url -q .url)
          echo "issue_url=${ISSUE_URL}" >> $GITHUB_OUTPUT
          echo "Created issue: ${ISSUE_URL}"

      - name: Notify QA Members Listed in .github/qa-members.txt
        if: steps.create_issue.outputs.issue_url != ''
        run: |
          ISSUE_URL="${{ steps.create_issue.outputs.issue_url }}"
          ISSUE_NUMBER=$(echo "$ISSUE_URL" | grep -oE '[0-9]+$')

          # Read mentions from the .github/qa-members.txt file
          MENTIONS=$(cat .github/qa-members.txt | xargs)

          COMMENT_BODY="${MENTIONS} This PR merge to beta requires QA testing. Please review the changes listed in this issue."

          echo "Notifying QA team: ${MENTIONS}"
          gh issue comment "$ISSUE_NUMBER" --body "$COMMENT_BODY" -R ${{ github.repository }}

          gh issue edit "$ISSUE_NUMBER" --add-label "needs-qa" -R ${{ github.repository }}
