name: Notify QAs of Merged PRs to Beta

on:
  pull_request:
    types:
      - closed
    branches:
      - beta
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: read

jobs:
  notify_qas:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set current date
        id: date
        run: echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Load QA members from file
        id: load_qas
        run: |
          if [ ! -f .github/workflows/qa_members.txt ]; then
            echo "QA members file not found."
            exit 1
          fi

          QAS=$(cat .github/workflows/qa_members.txt | grep -v '^#' | tr '\n' ' ')
          echo "MENTIONS=${QAS}" >> $GITHUB_ENV

      - name: Get recent merged PRs into beta
        id: get_prs
        run: |
          RAW_PRS=$(gh pr list --base beta --state merged --json number,title -L 100 -R ${{ github.repository }})
          
          # Filter for PRs merged today
          TODAY=$(date +%Y-%m-%d)
          PRS=$(echo "$RAW_PRS" | jq -r --arg TODAY "$TODAY" '
            map(select(.mergedAt | startswith($TODAY))) |
            .[] | "- PR-\(.number) \(.title)"
          ')

          if [ -z "$PRS" ]; then
            echo "No merged PRs found for today."
            echo "PRS=" >> $GITHUB_ENV
          else
            echo "Merged PRs:"
            echo "$PRS"
            echo "PRS<<EOF" >> $GITHUB_ENV
            echo "$PRS" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create GitHub Issue for QA
        if: env.PRS != ''
        run: |
          TITLE="PRs Merged into Beta - ${today}"

          cat <<EOF > issue_body.md
The following PRs have been merged into beta:

${PRS}

${MENTIONS} Please begin QA testing on the listed PRs.
EOF

          echo "Final Issue Body:"
          cat issue_body.md

          gh issue create --title "$TITLE" --body-file issue_body.md -R ${{ github.repository }}
