name: Track Merges into Beta (Linked PR Titles)

on:
  pull_request:
    types:
      - closed
    branches:
      - beta

jobs:
  track_prs:
    # Only run if the PR was actually merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Workspace and Git Directory
        run: |
          echo "--- Verifying Checkout ---"
          echo "Current directory: $(pwd)"
          ls -la ${{ github.workspace }}
          if [ -d "${{ github.workspace }}/.git" ]; then echo ".git directory FOUND."; else echo ".git directory NOT FOUND."; fi
          echo "--- End Verification ---"

      - name: Get merged PRs into beta and format as Markdown links
        id: get_prs
        run: |
          echo "Attempting gh pr list command..."
          RAW_PRS=$(gh pr list --base beta --state merged --json title,url -L 100 -R ${{ github.repository }})

          FORMATTED_PRS=$(echo "$RAW_PRS" | jq -r '.[] | "[\(.title)](\(.url))"')

          if [ -z "$FORMATTED_PRS" ]; then
            echo "No merged PRs found to report."
            FORMATTED_PRS=""
          else
            echo "Formatted PR Links:"
            echo "$FORMATTED_PRS"
          fi

          echo "PRS<<EOF" >> $GITHUB_ENV
          echo "$FORMATTED_PRS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create an Issue with the list of PR Links
        if: env.PRS != ''
        run: |
          ISSUE_TITLE="PRs Merged into Beta"

          # Define QA users (GitHub usernames) to assign
          QA_USERS="ShebaVTech"

          # Get current date and time
          CURRENT_TIME=$(date +"%Y-%m-%d %H:%M:%S %Z")

          # Construct a clean issue body (no @mentions)
          ISSUE_BODY=$(printf "The following PRs have been merged on **%s** into the **beta** branch and are ready for QA:\n\n%s" "$CURRENT_TIME" "${PRS}")

          echo "Creating issue with title: $ISSUE_TITLE"
          echo "--- Issue Body Start ---"
          echo "${ISSUE_BODY}"
          echo "--- Issue Body End ---"

          # Create the GitHub issue and assign QA users (no mentions in body)
          printf "%s" "${ISSUE_BODY}" | gh issue create --title "$ISSUE_TITLE" --body-file - --assignee "$QA_USERS" -R ${{ github.repository }}
